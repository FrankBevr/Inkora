#+title: Organisation
#+COLUMNS: %50ITEM(Task) %7TODO %14CLOCKSUM(Clock)

* Organisation

** DONE [#A] Chunking [1/1]
:LOGBOOK:
CLOCK: [2023-10-21 Sat 12:44]--[2023-10-21 Sat 13:02] =>  0:18
:END:
- [X]  Write everything down what is in the head, Prioritise it, Make it nice.
  - [X] Just ignore and write a step by step guide to get something running

*** Quick Breakdown

Goal: Develop a web3ar Expierience
- UI/UX
- Frontend
- Backend
- SmartContract
- 3D

UI/UX:
1. Colors
2. Typography
3. One Button
4. UserFlow
5. Wireframe
6. One Card
7. One Frame

Frontend:
1. Create a HTML Page
2. Start dev Server
3. Write a heading, write a paragraph
4. Write style to get red of default
5. Add Canvas
6. Draw a line via javascipt
7. Declare Victory
8. Add ThreeJS
9. Show Cube in canvas
10. Add MindAR
11. Get Default Scene to run
12. Add Button
13. On Button Click change Background
14. Declare Victory

Backend:
1. Create an app.js file
2. Install express
3. Serve a stupid json
4. Got to frontend, fetch and console.log() json

SmartContract:
1. Create a ink Project
2. Add storage to store count
3. Add function to increase count
4. Add function to get count
5. start node and deploy contract
6. call function via terminal
7. call function via substrate ui
8. Got to frontend, fetch and count
9. Got to frontend, increase count
10. Got to frontend, fetch and count

3D:
1. Open Blender
2. Export Cube
3. Save it

** DONE [#A] Quick and Rough [8/8]
:LOGBOOK:
CLOCK: [2023-10-21 Sat 13:02]--[2023-10-21 Sat 13:17] =>  0:15
:END:
*** DONE [#C] UX/UX [8/8]
:LOGBOOK:
CLOCK: [2023-10-21 Sat 18:59]--[2023-10-21 Sat 20:52] =>  1:53
CLOCK: [2023-10-21 Sat 18:03]--[2023-10-21 Sat 18:50] =>  0:47
CLOCK: [2023-10-21 Sat 15:00]--[2023-10-21 Sat 15:25] =>  0:25
CLOCK: [2023-10-21 Sat 14:46]--[2023-10-21 Sat 14:59] =>  0:13
CLOCK: [2023-10-21 Sat 14:05]--[2023-10-21 Sat 14:42] =>  0:37
CLOCK: [2023-10-21 Sat 13:17]--[2023-10-21 Sat 13:22] =>  0:05
:END:
- [X] Colors
  - [X] Set Up Komorebic for Quick Switching
  - [X] Create new Figma File
  - [X] use coolors.io
  - [X] create minimal colorschema
- [X] Typography
  - [X] Create Frame
  - [X] Create Heading, Paragraph, Bold, Italic
  - [X] Add AutoLayout
  - [X] Add AutoLayout of Colors
  - [X] Add Variations of Colors
  - [X] Add Icon Page
  - [X] Set Styles to FigFile
- [X] One Button
- [X] UserFlow
- [X] Wireframe
- [X] One Card
- [X] One Page
- [X] Export a pdf Design System, minimalistic
*** DONE [#A] Frontend [18/18]
:LOGBOOK:
CLOCK: [2023-10-22 Sun 16:58]--[2023-10-22 Sun 18:59] =>  2:01
CLOCK: [2023-10-22 Sun 10:58]--[2023-10-22 Sun 12:36] =>  1:38
CLOCK: [2023-10-22 Sun 09:43]--[2023-10-22 Sun 10:42] =>  0:59
CLOCK: [2023-10-22 Sun 08:33]--[2023-10-22 Sun 09:30] =>  0:57
CLOCK: [2023-10-22 Sun 08:13]--[2023-10-22 Sun 08:32] =>  0:19
:END:
- [X] Create a HTML Page
- [X] Start dev Server
- [X] Write a heading, write a paragraph
- [X] Write style to get red of default
- [X] Add Canvas
- [X] Draw a line via javascipt
- [X] Add tiny animation
- [X] Declare Victory
- [X] refactor it, split files
- [X] Add ThreeJS
- [X] Show Cube in canvas
- [X] modularize Code
- [X] Animate Cube
- [X] Add MindAR
- [X] Fix Chrome Camera
- [X] Get Default Scene to run
- [X] Add Button
- [X] Declare Victory
*** DONE [#C] Backend [4/4]
:LOGBOOK:
CLOCK: [2023-10-22 Sun 19:46]--[2023-10-22 Sun 19:56] =>  0:10
:END:
- [X] Create an app.js file
- [X] Install express
- [X] Serve a stupid json
- [X] Got to frontend, fetch and console.log() json
*** DONE [#A] SmartContract [9/9]
:LOGBOOK:
CLOCK: [2023-10-22 Sun 20:45]--[2023-10-22 Sun 21:46] =>  1:01
:END:
- [X] Create a ink Project
- [X] Add storage to store count
- [X] Add function to flip value
- [X] Add function to get value
- [X] start node and deploy contract
- [X] call function via terminal
- [X] call function via substrate ui
- [X] Go to frontend, fetch value
- [X] Go to frontend, increase flip value
*** DONE [#C] 3D [3/3]
:LOGBOOK:
CLOCK: [2023-10-22 Sun 21:49]--[2023-10-22 Sun 21:52] =>  0:03
:END:
- [X] Open Blender
- [X] Export Cube
- [X] Save it

*** DONE [#C] Diverse [3/3]
:LOGBOOK:
CLOCK: [2023-10-22 Sun 23:42]--[2023-10-22 Sun 23:54] =>  0:12
CLOCK: [2023-10-22 Sun 21:53]--[2023-10-22 Sun 23:38] =>  1:45
:END:
- [X] Document Day
- [X] Add it to Vitepress
- [X] Publish it

*** DONE [#A] Repair PC [11/11]
- [X] WLan Drive Broken, repair it
- [X] Doesn work, reset pc with keeping filex
- [X] Get hearattack, when realise that wsl is deinstalled
- [X] Get old XP Laptop running
- [X] Download Puppy OS
- [X] Boot from USB Stick
- [X] Connect via Lan and share working Wifi
- [X] Find Seedphrased to wallets
- [X] Set up PC
- [X] Set up Dev enviorment
- [X] Back on Track, drink a Tea

*** DONE [#A] Finish steps before add Steps [42/42]
:LOGBOOK:
CLOCK: [2023-10-26 Thu 18:02]--[2023-10-26 Thu 18:42] =>  0:40
CLOCK: [2023-10-26 Thu 17:12]--[2023-10-26 Thu 17:56] =>  0:44
CLOCK: [2023-10-26 Thu 15:39]--[2023-10-26 Thu 16:56] =>  1:17
CLOCK: [2023-10-26 Thu 15:01]--[2023-10-26 Thu 15:30] =>  0:29
CLOCK: [2023-10-26 Thu 11:54]--[2023-10-26 Thu 12:31] =>  0:37
CLOCK: [2023-10-26 Thu 10:47]--[2023-10-26 Thu 11:48] =>  1:01
CLOCK: [2023-10-26 Thu 07:59]--[2023-10-26 Thu 10:18] =>  2:19
CLOCK: [2023-10-25 Wed 20:25]--[2023-10-25 Wed 21:08] =>  0:43
CLOCK: [2023-10-25 Wed 20:04]--[2023-10-25 Wed 20:15] =>  0:11
CLOCK: [2023-10-25 Wed 18:01]--[2023-10-25 Wed 18:43] =>  0:42
CLOCK: [2023-10-25 Wed 17:23]--[2023-10-25 Wed 18:00] =>  0:37
CLOCK: [2023-10-25 Wed 16:49]--[2023-10-25 Wed 17:13] =>  0:24
CLOCK: [2023-10-25 Wed 13:03]--[2023-10-25 Wed 16:43] =>  3:40
CLOCK: [2023-10-25 Wed 09:08]--[2023-10-25 Wed 12:16] =>  3:08
CLOCK: [2023-10-25 Wed 07:32]--[2023-10-25 Wed 08:55] =>  1:23
CLOCK: [2023-10-24 Tue 19:02]--[2023-10-25 Wed 01:58] =>  6:56
CLOCK: [2023-10-24 Tue 16:03]--[2023-10-24 Tue 17:01] =>  0:58
CLOCK: [2023-10-24 Tue 10:43]--[2023-10-24 Tue 11:20] =>  0:37
CLOCK: [2023-10-24 Tue 09:14]--[2023-10-24 Tue 10:21] =>  1:07
:END:
- [X] UserFlow
- [X] Wireframe
- [X] One Card
- [X] One Page
- [X] Got to frontend, fetch and console.log() json
- [X] Go to frontend, fetch value
- [X] Go to frontend, increase flip value
- [X] Get React working with MindAR
- [X] Explore MindAR React example, add it to playground
- [X] Install right dependencies
- [X] Make food for guests
- [X] Help somewhere out
- [X] felt demotiviated, no much progress
- [X] help friend to improve his project
  - [X] get truffle correctly running
  - [X] write migration script
  - [X] write testimport metadata from 'contract/metadata.json's
  - [X] use of truffle console
  - [X] create frontend thingy
  - [X] create div for blocknumber updater
  - [X] create div for contract deployment via form
  - [X] create div for call contract
  - [X] modularize it
  - [X] create footer and header
  - [X] call it a day
- [X] sleepy and more motivated for Wednesday
- [X] write Tuesday.md
- [X] add bullet points to vitepress
- [X] try to reproduce react mind ar repo
- [X] comment github issue on tresjs
- [X] debug fetch, because of wsl
- [X] try to port it to windows
- [X] figured out that use(cors) is the actually error
- [X] create fetchSmartContract Component
- [X] add useInk
- [X] add Custom Local chain config
- [X] get Metadata, recompile
- [X] connect to wallet
- [X] disconnect to wallet
- [X] go in call about OnlyDust.xyz
- [X] create FetchSmartContract Component
- [X] create FetchBlockNumber Component
- [X] get frequently Blocknumber
- [X] make FetchSmartContract Work
- [X] try to call a value
- [X] fix update Value Issue
- [X] make it work
- [X] Call with Leven, showed project, got Feedback, spoke about Randomness
- [X] Write Markdown from yesterday alias Wednesday.md
- [X] Add UserFlow to Design System
- [X] Add simplistic Wireframe
- [X] Add User Interace
- [X] Complete Ui Things

** TODO [#A] Smart Contract Work & Diverse [12/12]
:LOGBOOK:
CLOCK: [2023-10-30 Mon 20:26]--[2023-10-30 Mon 21:22] =>  0:56
CLOCK: [2023-10-30 Mon 18:05]--[2023-10-30 Mon 19:48] =>  1:43
CLOCK: [2023-10-30 Mon 13:09]--[2023-10-30 Mon 14:28] =>  1:19
CLOCK: [2023-10-30 Mon 11:34]--[2023-10-30 Mon 12:14] =>  0:40
CLOCK: [2023-10-30 Mon 10:12]--[2023-10-30 Mon 11:25] =>  1:13
CLOCK: [2023-10-30 Mon 09:23]--[2023-10-30 Mon 10:06] =>  0:43
CLOCK: [2023-10-30 Mon 08:30]--[2023-10-30 Mon 09:17] =>  0:47
CLOCK: [2023-10-29 Sun 19:22]--[2023-10-29 Sun 22:10] =>  2:48
CLOCK: [2023-10-29 Sun 18:15]--[2023-10-29 Sun 19:01] =>  0:46
CLOCK: [2023-10-29 Sun 17:46]--[2023-10-29 Sun 18:12] =>  0:51
CLOCK: [2023-10-28 Sat 18:53]--[2023-10-28 Sat 19:07] =>  0:14
CLOCK: [2023-10-28 Sat 18:38]--[2023-10-28 Sat 18:50] =>  0:12
CLOCK: [2023-10-28 Sat 17:58]--[2023-10-28 Sat 18:38] =>  0:40
CLOCK: [2023-10-28 Sat 13:56]--[2023-10-28 Sat 15:13] =>  1:17
CLOCK: [2023-10-28 Sat 12:16]--[2023-10-28 Sat 13:31] =>  1:15
CLOCK: [2023-10-28 Sat 10:46]--[2023-10-28 Sat 12:08] =>  1:22
CLOCK: [2023-10-28 Sat 07:33]--[2023-10-28 Sat 10:37] =>  3:04
CLOCK: [2023-10-27 Fri 17:01]--[2023-10-27 Fri 18:58] =>  1:57
CLOCK: [2023-10-27 Fri 14:48]--[2023-10-27 Fri 15:02] =>  0:14
CLOCK: [2023-10-27 Fri 11:12]--[2023-10-27 Fri 12:18] =>  1:06
CLOCK: [2023-10-27 Fri 09:54]--[2023-10-27 Fri 11:02] =>  1:08
CLOCK: [2023-10-27 Fri 07:12]--[2023-10-27 Fri 07:27] =>  0:15
CLOCK: [2023-10-26 Thu 20:12]--[2023-10-27 Fri 00:14] =>  4:02
CLOCK: [2023-10-26 Thu 18:41]--[2023-10-26 Thu 19:21] =>  0:40
:END:
- [X] Add data called ipfs_link
- [X] Add function called participate_scratch_card
- [X] reshuffle vitepress, add more structure
- [X] help a friend with datavis for treasury stuff
- [X] Write Thursday.md
- [X] rebuild, redeploy docs
- [X] particpate on polka accemdy call
- [X] import string sucessfully on 4.0
- [X] add ipfs mockUp
- [X] add test
- [X] make it compile
- [X] add participate_scratch_card
  - [X] chunk it down in JourneyFunction
  - [X] add feedMe() function
  - [X] add pukeIt() function
  - [X] add generateRandomness function
  - [X] use contract example to make feedMe kind of work
  - [X] add tests to feedMe()
  - [X] come up with a stupid randomness, maybe blocktime
  - [X] add pseudo randomness from astar docs
  - [X] add feed_me_randomly
    - [X] figure out how to divide without using division
    - [X] add divide_by_100()
    - [X] fix divide_by_100()
    - [X] make it work again
  - [X] add simplistic Error Handling
  - [X] add intro.md
  - [X] add motivation.md
  - [X] fill out feature section of starter page.
  - [X] clean up the repo a bit
    - [X] change dennis to submodules
    - [X] add .gitattributes
    - [X] fix minor issue with .gitattributes
  - [X] redeploy docs
  - [X] integrate AZero Id at least get it compile finally
  - [X] call it a day, collecting data for UseCase alias BDay party.
  - [X] write Friday.md
  - [X] redeploy docs
  - [X] create plan for the last 12 hours tomorrow
  - [X] Add ButtonParticipateScratchCard to Frontend
  - [X] Add Saturday.md
  - [X] Update README.md for submission checkout
  - [X] Add Sunday-2.md
  - [X] Send a value along side with function call
  - [X] clean up
  - [X] make video
  - [X] add updateOwner to lib.rs
  - [X] update docs to make linking right
  - [X] resture contract add impls, traits, libs
  - [X] make tests work again
  - [X] make fu**ing Btn work

** DONE [#B] Make it nicey [57/57]
:LOGBOOK:
CLOCK: [2023-11-03 Fri 23:28]--[2023-11-04 Sat 00:38] =>  1:10
CLOCK: [2023-11-03 Fri 22:04]--[2023-11-03 Fri 22:54] =>  0:50
CLOCK: [2023-11-03 Fri 21:10]--[2023-11-03 Fri 22:04] =>  0:54
CLOCK: [2023-11-03 Fri 18:43]--[2023-11-03 Fri 19:34] =>  0:51
CLOCK: [2023-11-03 Fri 16:58]--[2023-11-03 Fri 17:49] =>  0:51
CLOCK: [2023-11-03 Fri 16:02]--[2023-11-03 Fri 16:53] =>  0:51
CLOCK: [2023-11-03 Fri 11:01]--[2023-11-03 Fri 13:08] =>  2:07 
CLOCK: [2023-11-03 Fri 10:30]--[2023-11-03 Fri 10:52] =>  0:22
CLOCK: [2023-11-03 Fri 10:01]--[2023-11-03 Fri 10:24] =>  0:23
CLOCK: [2023-11-03 Fri 09:43]--[2023-11-03 Fri 10:01] =>  0:18
CLOCK: [2023-11-03 Fri 09:23]--[2023-11-03 Fri 09:43] =>  0:20
CLOCK: [2023-11-03 Fri 09:01]--[2023-11-03 Fri 09:12] =>  0:11
CLOCK: [2023-11-03 Fri 08:00]--[2023-11-03 Fri 09:01] =>  0:55
CLOCK: [2023-11-02 Thu 21:03]--[2023-11-02 Thu 23:47] =>  2:44
CLOCK: [2023-11-02 Thu 19:09]--[2023-11-02 Thu 20:58] =>  1:49
CLOCK: [2023-11-02 Thu 17:48]--[2023-11-02 Thu 18:36] =>  0:48
CLOCK: [2023-11-02 Thu 13:54]--[2023-11-02 Thu 14:58] =>  1:04
CLOCK: [2023-11-02 Thu 09:52]--[2023-11-02 Thu 11:01] =>  1:09
CLOCK: [2023-11-02 Thu 08:23]--[2023-11-02 Thu 09:28] =>  1:05
CLOCK: [2023-11-02 Thu 07:40]--[2023-11-02 Thu 08:17] =>  0:37
CLOCK: [2023-11-02 Thu 07:01]--[2023-11-02 Thu 07:23] =>  0:22
CLOCK: [2023-11-01 Wed 23:02]--[2023-11-01 Wed 23:21] =>  0:19
CLOCK: [2023-11-01 Wed 21:06]--[2023-11-01 Wed 21:10] =>  0:04
CLOCK: [2023-11-01 Wed 19:48]--[2023-11-01 Wed 21:02] =>  1:14
CLOCK: [2023-11-01 Wed 19:07]--[2023-11-01 Wed 19:42] =>  0:35
CLOCK: [2023-11-01 Wed 18:08]--[2023-11-01 Wed 18:34] =>  0:26
CLOCK: [2023-11-01 Wed 17:07]--[2023-11-01 Wed 18:00] =>  0:53
CLOCK: [2023-11-01 Wed 11:01]--[2023-11-01 Wed 11:44] =>  0:43
CLOCK: [2023-11-01 Wed 10:12]--[2023-11-01 Wed 10:43] =>  0:31
CLOCK: [2023-11-01 Wed 08:01]--[2023-11-01 Wed 09:28] =>  1:27
CLOCK: [2023-10-31 Tue 19:14]--[2023-10-31 Tue 21:21] =>  2:07
CLOCK: [2023-10-31 Tue 18:01]--[2023-10-31 Tue 19:00] =>  0:59
CLOCK: [2023-10-31 Tue 17:32]--[2023-10-31 Tue 17:58] =>  0:26
CLOCK: [2023-10-31 Tue 17:20]--[2023-10-31 Tue 17:29] =>  0:09
CLOCK: [2023-10-31 Tue 16:37]--[2023-10-31 Tue 17:12] =>  0:35
CLOCK: [2023-10-31 Tue 15:23]--[2023-10-31 Tue 16:25] =>  1:02
CLOCK: [2023-10-31 Tue 12:10]--[2023-10-31 Tue 12:17] =>  0:07
CLOCK: [2023-10-31 Tue 10:12]--[2023-10-31 Tue 12:06] =>  1:54
CLOCK: [2023-10-31 Tue 09:05]--[2023-10-31 Tue 09:59] =>  0:54
CLOCK: [2023-10-31 Tue 07:42]--[2023-10-31 Tue 08:47] =>  1:05
CLOCK: [2023-10-30 Mon 20:50]--[2023-10-30 Mon 22:12] =>  1:22
CLOCK: [2023-10-30 Mon 21:24]--[2023-10-30 Mon 21:27] =>  0:03
:END:
- [X] Get rid of uncessary chunk
- [X] Reargange Frontend (heavier restructure)
- [X] learn zustand
  - [X] add basics
  - [X] storing tasks
  - [X] displaying tasks
  - [X] adding tasks
  - [X] deleting tasks
  - [X] moving tasks
  - [X] zustand middleware
  - [X] unit tests via vitest
  - [X] advancded Zustand
- [X] Find or make Mushroom 3D
- [X] Upload Mushroom to ipfs
- [X] Copy ipfs hash, paste it in
- [X] Test it via terminal
- [X] Increase Functionality moes-taverne.azero
  - [X] Get message via azns router
  - [X] Deciding that i will not go further ^^
- [X] Styling
  - [X] Get Styles in Order
  - [X] Make Button nicey
- [X] Make Video-2
- [X] Write Monday-2
- [X] Write Tuesday-2
- [X] participate in Polka Ambo Call
- [X] Add Zustand for StateManagement
- [X] Create Store,
- [X] display store value
- [X] increase something on click
- [X] validator work, check apprearing issues
- [X] vali make it run again
- [X] add something to store
- [X] update something to store
- [X] delete something to store
- [X] add store for viewstate
- [X] center all that stuff, establish kind of clickworflow
- [X] add css from simplistic desgin system
- [X] create Button Component
- [X] write Wednesday-2.md

- [X] update selectWallet View
- [X] update participate Scratch Card
- [X] almoooost
- [X] upload to testnet
- [X] make it work via testnet
- [X] load object correctly
- [X] participate in call
- [X] add ipfs scripts
- [X] got feedback from friend
- [X] participate in call for menu card

- [X] write thursday-2.md
- [X] answering mails
- [X] build & redeploy docs

- [X] update ./install.sh
- [X] add ipfs to contract
- [X] add readability
- [X] upload flipper to test net
- [X] call
- [X] get azero testnet id
- [X] deploy on testnet
- [X] change frontend to make it work with testnet
- [X] deploy frontend it via surge.sh
- [X] test it via subwallet
- [X] add balance
- [X] clean it up
- [X] redeploy everything
- [X] make a video
- [X] Rewrite the README.md
- [X] Rewrite Outlook.md
- [X] DONE 🚀
